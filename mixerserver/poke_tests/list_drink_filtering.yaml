vars:
  api_url: "http://localhost:8080/api/v1"

calls:
- name: login baz
  url: '{{ .api_url }}/login'
  body:
    username: baz
    password: bazpass
  exports:
  - jq: '.accessToken'
    as: 'baz_token'

- name: create public drink one
  headers:
    authorization: '{{ .baz_token }}'
  url: '{{ .api_url }}/drink'
  body:
    drink_data:
      name: Public Drink One
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 1

- name: create public drink two
  headers:
    authorization: '{{ .baz_token }}'
  url: '{{ .api_url }}/drink'
  body:
    drink_data:
      name: Public Drink Two
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 1

- name: create private drink
  headers:
    authorization: '{{ .baz_token }}'
  url: '{{ .api_url }}/drink'
  body:
    drink_data:
      name: Private Drink One
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 2

- name: login foo
  url: '{{ .api_url }}/login'
  body:
    username: foo
    password: foopass
  exports:
  - jq: '.accessToken'
    as: 'foo_token'

- name: list baz drinks as foo
  headers:
    authorization: '{{ .foo_token }}'
  url: '{{ .api_url }}/drink/user/baz'
  asserts:
  - jq: '.drinks | [.[] | .drinkData.name]'
    expected:
    - Public Drink One
    - Public Drink Two

- name: list baz drinks as baz
  headers:
    authorization: '{{ .baz_token }}'
  url: '{{ .api_url }}/drink/user/baz'
  asserts:
  - jq: '.drinks | [.[] | .drinkData.name]'
    expected:
    - Public Drink One
    - Public Drink Two
    - Private Drink One
