vars:
  api_url: "http://localhost:8080/api/v1"

imports:
  register_users: register_users.yaml
  purge: purge.yaml

calls:
- from-import:
    name: purge
    call: purge-db
- from-import:
    name: register_users
    call: create-baz
- from-import:
    name: register_users
    call: create-foo

- name: login baz
  url: '{{ .api_url }}/login'
  body:
    username: baz
    password: bazpass
  exports:
  - jq: '.accessToken'
    as: 'baz_token'

- name: create public drink
  headers:
    authorization: '{{ .baz_token }}'
  url: '{{ .api_url }}/drink'
  body:
    drink_data:
      name: Public Drink
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 1
  exports:
  - jq: '.id'
    as: "public_id"

- name: create private drink
  headers:
    authorization: '{{ .baz_token }}'
  service-host: '{{ .service }}'
  url: '{{ .api_url }}/drink'
  body:
    drink_data:
      name: Private Drink
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 2
  exports:
  - jq: '.id'
    as: "private_id"

- name: login foo
  url: '{{ .api_url }}/login'
  body:
    username: foo
    password: foopass
  exports:
  - jq: '.accessToken'
    as: 'foo_token'

- name: read public drink
  headers:
    authorization: '{{ .foo_token }}'
  url: '{{ .api_url }}/drink/{{ .public_id }}'
  asserts:
  - jq: '.drink.drinkData.name'
    expected: Public Drink
  - jq: '.metadata.invokingUser'
    expected: foo

- name: read private drink
  headers:
    authorization: '{{ .foo_token }}'
  url: '{{ .api_url }}/drink/{{ .private_id }}'
  want-status: 404
