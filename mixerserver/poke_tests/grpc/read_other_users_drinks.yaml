vars:
  service: "localhost:50051"
  drink_service: "mixer.DrinkService"
  user_service: "mixer.UserService"

calls:
- name: login baz
  type: grpc
  service-host: '{{ .service }}'
  url: '{{ .user_service }}/Login'
  body:
    username: baz
    password: bazpass
  exports:
  - jq: '.accessToken'
    as: 'baz_token'

- name: create public drink
  type: grpc
  headers:
    authorization: '{{ .baz_token }}'
  service-host: '{{ .service }}'
  url: '{{ .drink_service }}/CreateDrink'
  body:
    drink_data:
      name: Public Drink
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 1
  exports:
  - jq: '.id'
    as: "public_id"

- name: create private drink
  type: grpc
  headers:
    authorization: '{{ .baz_token }}'
  service-host: '{{ .service }}'
  url: '{{ .drink_service }}/CreateDrink'
  body:
    drink_data:
      name: Private Drink
      primary_alcohol: Rum
      ingredients: ["2.5 oz Rum"]
      publicity: 2
  exports:
  - jq: '.id'
    as: "private_id"

- name: login foo
  type: grpc
  service-host: '{{ .service }}'
  url: '{{ .user_service }}/Login'
  body:
    username: foo
    password: foopass
  exports:
  - jq: '.accessToken'
    as: 'foo_token'

- name: read public drink
  type: grpc
  headers:
    authorization: '{{ .foo_token }}'
  service-host: '{{ .service }}'
  url: '{{ .drink_service }}/ReadDrink'
  body:
    id: '{{ .public_id }}'
  asserts:
  - jq: '.drink.drinkData.name'
    expected: Public Drink

- name: read private drink
  type: grpc
  headers:
    authorization: '{{ .foo_token }}'
  service-host: '{{ .service }}'
  url: '{{ .drink_service }}/ReadDrink'
  body:
    id: '{{ .private_id }}'
  want-status: 5
